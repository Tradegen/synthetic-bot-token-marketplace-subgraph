type Marketplace @entity {
  # Marketplace contract address.
  id: ID!

  # Total number of listings.
  listingCount: Int!

  # Total volume (in USD) across all listings.
  totalVolumeUSD: BigDecimal!

  # Total number of tokens sold across all listings.
  totalTokensSold: BigInt!

  # Total number of transactions.
  txCount: BigInt!
}

type Listing @entity {
  # Listing ID in Marketplace contract.
  id: ID!

  # Whether the listing still exists.
  # The listing "exists" if the number of tokens for sale is greater than 0.
  # Listings in the marketplace contract are never deleted.
  exists: Boolean!

  # Reference to the listing's seller.
  seller: User!

  # Address of the SyntheticBotToken contract.
  botTokenAddress: String!

  # NFT ID of the position in the SyntheticBotToken contract.
  positionID: BigInt!

  # Number of bot tokens for sale.
  numberOfTokens: BigInt!

  # Sale price per token (in USD).
  tokenPrice: BigInt!
}

type User @entity {
  # User's wallet address.
  id: ID!

  # Total number of tokens this user has sold.
  numberOfTokensSold: BigInt!

  # Total volume (in USD) of this user.
  # Includes both buying and selling volume.
  tradingVolumeUSD: BigDecimal!

  # Listing entities associated with this user.
  listings: [Listing!]! @derivedFrom(field: "seller")

  # Transaction entities associated with this user.
  transactions: [Transaction!]! @derivedFrom(field: "user")
}

type Transaction @entity {
  # Transaction hash.
  id: ID!

  # Blockchain data pertaining to this transaction.
  blockNumber: BigInt!
  timestamp: BigInt!

  # User entity associated with this transaction.
  user: User!

  # Address of the SyntheticBotToken contract.
  botTokenAddress: String!

  # Specifies the transaction type.
  # Each transaction will have exactly one subtype.
  createListing: CreateListing
  removeListing: RemoveListing
  updatePrice: UpdatePrice
  updateQuantity: UpdateQuantity
  purchase: Purchase
}

type CreateListing @entity {
  # Transaction ID + "-createListing".
  id: ID!

  # Reference to the parent Transaction entity.
  transaction: Transaction!

  # Need this to pull recent txns for marketplace.
  timestamp: BigInt! 

  # Address of the seller.
  seller: String!

  # Address of the SyntheticBotToken contract.
  botTokenAddress: String!

  # NFT ID of this position in the SyntheticBotToken contract.
  positionID: BigInt!

  # Number of bot tokens listed for sale.
  numberOfTokens: BigInt!

  # Price per token (in USD).
  tokenPrice: BigInt!

  # Listing ID in the Marketplace contract.
  index: BigInt!
}

type RemoveListing @entity {
  # Transaction ID + "-removeListing".
  id: ID!

  # Reference to the parent Transaction entity.
  transaction: Transaction!

  # Need this to pull recent txns for marketplace.
  timestamp: BigInt!

  # Address of the seller.
  seller: String!

  # Address of the SyntheticBotToken contract.
  botTokenAddress: String!

  # Listing ID.
  index: BigInt!
}

type UpdatePrice @entity {
  # Transaction ID + "-updatePrice".
  id: ID!

  # Reference to the parent Transaction entity.
  transaction: Transaction!

  # Need this to pull recent txns for marketplace.
  timestamp: BigInt!

  # Address of the seller.
  seller: String!

  # Address of the SyntheticBotToken contract.
  botTokenAddress: String!

  # New price per token (in USD).
  newTokenPrice: BigInt!

  # Listing ID.
  index: BigInt!
}

type UpdateQuantity @entity {
  # Transaction ID + "-updateQuantity".
  id: ID!

  # Reference to the parent Transaction entity.
  transaction: Transaction!

  # Need this to pull recent txns for marketplace.
  timestamp: BigInt!

  # Address of the seller.
  seller: String!

  # Address of the SyntheticBotToken contract.
  botTokenAddress: String!

  # New number of tokens for sale.
  newQuantity: BigInt!

  # Listing ID.
  index: BigInt!
}

type Purchase @entity {
  # Transaction ID + "-purchase".
  id: ID!

  # Reference to the parent Transaction entity.
  transaction: Transaction!

  # Need this to pull recent txns for marketplace.
  timestamp: BigInt!

  # Address of the buyer.
  buyer: String!

  # Address of the SyntheticBotToken contract.
  botTokenAddress: String!

  # Number of bot tokens purchased.
  numberOfTokens: BigInt!

  # Price per token at which the tokens were purchased.
  tokenPrice: BigInt!

  # NFT ID of the position in the SyntheticBotToken contract.
  positionID: BigInt!

  # Listing ID.
  index: BigInt!
}

# Data accumulated and condensed into day stats for all of marketplace.
type MarketplaceDayData @entity {
  # Timestamp rounded to current day by dividing by 86400.
  id: ID! 
  date: Int!

  # Total USD volume for the day across all listings.
  dailyVolumeUSD: BigDecimal!

  # Total all-time USD volume across all listings.
  totalVolumeUSD: BigDecimal!

  # Total number of tokens sold for the day across all listings.
  dailyNumberOfTokensSold: BigInt!

  # Total number of transactions across all listings.
  # Includes all transaction subtypes (CreateListing, RemoveListing, UpdatePrice, UpdateQuantity, Purchase).
  txCount: BigInt!
}